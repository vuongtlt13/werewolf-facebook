{"version":3,"sources":["../app.js"],"names":["env","require","BootBot","playerManager","express","bodyParser","bot","accessToken","verifyToken","appSecret","app","use","urlencoded","extended","get","req","res","setHeader","listPlayer","getPlayers","send","JSON","stringify","end","reset","console","log","msg","status","post","body","say","id","character","sendEach","params","player","name","addPlayer","__dirname","start","process","PORT"],"mappings":"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","file":"app.js","sourcesContent":["import {registerAction} from './registerAction';\nimport PlayerManager from './PlayerManager';\nimport Player from './Player';\n\nconst env = require('node-env-file');\n\nconst BootBot = require('bootbot');\n\nexport const playerManager = new PlayerManager();\n\nconst express = require('express');\nconst bodyParser = require('body-parser');\n\nexport const bot = new BootBot({\n    accessToken: 'EAADyUFgrJA4BAFwDILiDLQawohPtZAxIhFzfB0Nijnv44sgsEN5aCskQTLiL7NgL6ZBdO1LHlaSRTDfazbIDZCFS181Rymic0SJHyffe7S3go0i65Ru0Wnc8gokjTZBSfBg8yoz10xi030T6g0nncUaQXfkzXDfZAVCB9evPXTgZDZD',\n    verifyToken: 'token',\n    appSecret: '136216e4f5392be84caa113d8a2b157b'\n});\n\nlet app = bot.app;\n\napp.use(bodyParser.urlencoded({ extended: false }));\n\napp.get('/getallplayer', function (req, res) {\n    res.setHeader('Content-Type', 'application/json');\n    let listPlayer = playerManager.getPlayers();\n    res.send(JSON.stringify(listPlayer) + \"\\n\");\n    res.end();\n});\n\napp.get('/deleteallplayer', function (req, res) {\n    res.setHeader('Content-Type', 'application/json');\n    playerManager.reset();\n    console.log(playerManager);\n    let msg = {status: \"success\"};\n    res.send(JSON.stringify(msg) + \"\\n\");\n    res.end();\n});\n\napp.post('/sendmessage', function (req, res) {\n    console.log(req.body);\n    res.setHeader('Content-Type', 'application/json');\n    bot.say(req.body.id, 'In this game, you are \"' + req.body.character + '\"');\n    let msg = {status: \"success\"};\n    res.send(JSON.stringify(msg) + \"\\n\");\n    res.end();\n});\n\napp.post('/notify', function (req, res) {\n    console.log(req.body);\n    playerManager.sendEach(req.body.msg);\n    res.setHeader('Content-Type', 'application/json');\n    let msg = {status: \"success\"};\n    res.send(JSON.stringify(msg) + \"\\n\");\n    res.end();\n});\n\napp.post('/postallplayer', function (req, res) {\n    console.log(req.params);\n});\n\napp.post('/addplayer', function (req, res) {\n    console.log(\"REQUEST POST: -------------------\", req.body);\n    let player = new Player(req.body.id, req.body.name);\n    playerManager.addPlayer(player);\n    res.setHeader('Content-Type', 'application/json');\n    let msg = {status: \"success\"};\n    res.send(JSON.stringify(msg) + \"\\n\");\n    res.end();\n    // console.log(playerManager);\n});\n\nregisterAction(bot);\n\nenv(__dirname + '/.env');\n\nbot.start(process.env.PORT);"]}